package edu.buaa.ml;

import java.util.Random;


public class AliasTable {
    public int sampleNumber;
    // dist was generated by dividing normalization outside
    private double normalization;
    private double[] dist;
    private int[] alias;
    private double[] prob;
    private int number;
    private Random random;

    // sunpy
    public double[] distbak;

    public double getNormalization() {
        return this.normalization;
    }

    public double[] getDist() {
        return this.dist;
    }

    public AliasTable(double[] dist, int number, double normalization) {
        this.sampleNumber = 0;
        this.normalization = normalization;
        this.dist = dist;
        this.number = number;
        this.alias = new int[number];
        this.prob = new double[number];
        this.random = new Random();

        // sunpy
        distbak = new double[number];
        for (int i = 0; i < number; i++)
            distbak[i] = dist[i];
    }

    public void generateAliasTable() {
        int i, j, l, g;

        for (i = 0; i < number; i++)
            dist[i] = dist[i] * number;

        for (j = 0; j < number - 1; j++) {
            for (l = 0; l < number; l++) {
                if (dist[l] >= 0 && dist[l] <= 1)
                    break;
            }

            for (g = 0; g < number; g++) {
                if (dist[g] >= 1 && g != l)
                    break;
            }

            // sunpy
            if (l == number || g == number) {
                for (int x = 0; x < number; x++)
                    System.out.println(String.format("dist[%d] = %f", x, distbak[x]));
            }

            prob[l] = dist[l];
            alias[l] = g;
            dist[g] = dist[g] - (1- dist[l]);
            dist[l] = -1;
        }

        prob[number - 1] = 1;
        alias[number - 1] = -1;
    }

    public int sampleAlias() {
        int bin = random.nextInt(number);
        double p = random.nextDouble();
        if (p <= prob[bin])
            return bin;
        else
            return alias[bin];
    }
}
